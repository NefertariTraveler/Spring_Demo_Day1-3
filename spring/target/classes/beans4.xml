<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
">
    <!--使用框加-->
    <!--1.目标类-->
    <bean id="userService" class="com.javacto.day3.c_aspectj_xml.UserServiceImpl"></bean>
    <!--2.切面类-->
    <bean id="myAspect" class="com.javacto.day3.c_aspectj_xml.MyAspect"></bean>
    <!--3.aop编程  采用框架
                    <aop:aspect ref="myAspect"> 加上它就是说，我这里采用aspect框架
        -->
    <aop:config proxy-target-class="true">
        <!--切入点-->
        <aop:pointcut id="scanAll" expression="execution(* com.javacto.day3.c_aspectj_xml.*.*(..))"/>
        <aop:aspect ref="myAspect">
            <!--前置通知-->
            <aop:before method="before" pointcut-ref="scanAll"></aop:before>
            <!--后置通知-->
            <aop:after-returning method="afterReturning" pointcut-ref="scanAll" returning="obj"></aop:after-returning>
            <!--环绕通知-->
            <aop:around method="around" pointcut-ref="scanAll"></aop:around>
            <!--异常通知-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="scanAll" throwing="throwable"></aop:after-throwing>
            <!--最终通知-->
            <aop:after method="after" pointcut-ref="scanAll"></aop:after>
        </aop:aspect>
    </aop:config>
</beans>